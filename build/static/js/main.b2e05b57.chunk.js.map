{"version":3,"sources":["services/Contacts.js","components/ContactInfo.js","components/FilterContact.js","components/ContactForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","updatedContact","put","ContactInfo","contact","allcontacts","setContacts","name","number","onClick","window","confirm","Contacts","status","filter","c","FilterContact","props","value","newSearchTerm","onChange","handleSearchTermChange","ContactForm","persons","setPersons","setNotification","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","some","alert","trim","contactToBeUpdated","find","p","map","notification","setTimeout","catch","error","n","concat","target","type","Notification","message","className","isError","App","contacts","setNewSearchTerm","isSearching","setIsSearching","contactsToShow","toLowerCase","includes","useEffect","person","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2e05b57.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(baseUrl + \"/\" + id)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst update = (id, updatedContact) => {\r\n    const request = axios.put(baseUrl + \"/\" + id, updatedContact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n}\r\n","import React from \"react\";\r\nimport Contacts from \"../services/Contacts\";\r\n\r\nconst ContactInfo = ({ contact, allcontacts, setContacts }) => {\r\n    const deleteContact = () => {\r\n        if (window.confirm(`sure to delete ${contact.name} ?`)) {\r\n            Contacts.remove(contact.id).then(\r\n                response => {\r\n                    if (response.status === 200) {\r\n                        setContacts(allcontacts.filter(c => c.id !== contact.id))\r\n\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p>{contact.name} {contact.number}\r\n            <button onClick={deleteContact}>delete</button>\r\n        </p>\r\n    )\r\n}\r\nexport default ContactInfo\r\n","import React from \"react\";\r\n\r\nconst FilterContact = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={props.newSearchTerm} onChange={props.handleSearchTermChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterContact\r\n","import React, {useState} from \"react\";\r\nimport Contacts from \"../services/Contacts\";\r\n\r\nconst ContactForm = ({persons, setPersons, setNotification}) => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addContact = (event) => {\r\n        event.preventDefault()\r\n\r\n        const alreadyExist = () => {\r\n            return contact => contact.name === newName && contact.number === newNumber;\r\n        }\r\n\r\n        const samePersonNewNumber = () => {\r\n            return contact => contact.name === newName && contact.number !== newNumber;\r\n        }\r\n\r\n        if (persons.some(alreadyExist())) {\r\n            window.alert(`${newName} is already added to phonebook`);\r\n        } else if ((newName && newName.trim()) && (newNumber && newNumber.trim())) {\r\n            if (persons.some(samePersonNewNumber())) {\r\n               if (window.confirm(`${newName} is already added to phonebook, replace the old number?`)) {\r\n                   const contactToBeUpdated = persons.find(p => p.name === newName)\r\n                   const updatedContact = {...contactToBeUpdated, number: newNumber}\r\n\r\n                   Contacts.update(contactToBeUpdated.id, updatedContact).then(\r\n                       response => {\r\n                           setPersons(persons.map(p => p.name === newName ? response : p))\r\n                           setNewName('')\r\n                           setNewNumber('')\r\n                           const notification = {\r\n                               \"message\": `contact ${newName} is updated with new number successfully`,\r\n                               \"isError\": false\r\n                           }\r\n                           setNotification(notification)\r\n                           setTimeout(() => {\r\n                               setNotification(null)\r\n                           }, 3000)\r\n                       }).catch(error => {\r\n                       const notification = {\r\n                           \"message\":  `Information of '${contactToBeUpdated.name}' has been removed from server`,\r\n                           \"isError\": true\r\n                       }\r\n                       setNotification(notification)\r\n                       setTimeout(() => {\r\n                           setNotification(null)\r\n                       }, 3000)\r\n                       setPersons(persons.filter(n => n.name !== newName))\r\n                   })\r\n               }\r\n            } else {\r\n                const personObj = {\r\n                    name: newName,\r\n                    number: newNumber\r\n                }\r\n                Contacts.create(personObj).then(\r\n                    response => {\r\n                        setPersons(persons.concat(response))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        const notification = {\r\n                            \"message\":  `contact ${newName} is added successfully`,\r\n                            \"isError\": false\r\n                        }\r\n                        setNotification(notification)\r\n                        setTimeout(() => {\r\n                            setNotification(null)\r\n                        }, 3000)\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addContact}>\r\n                <div>name: <input value={newName} onChange={handleNameChange}/></div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n","const Notification = ({notification}) => {\r\n    if (notification === null || !notification.message) {\r\n        return null\r\n    } else {\r\n        const className = notification.isError ? \"error\" : \"notification\";\r\n        return (\r\n            <div className={className}>\r\n                {notification.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState, useEffect} from 'react'\r\nimport ContactInfo from \"./components/ContactInfo\";\r\nimport FilterContact from \"./components/FilterContact\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Contacts from \"./services/Contacts\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n    const [contacts, setContacts] = useState([])\r\n\r\n    const [newSearchTerm, setNewSearchTerm] = useState('')\r\n    const [isSearching, setIsSearching] = useState(false)\r\n    const [notification, setNotification] = useState(null)\r\n\r\n    const contactsToShow = isSearching\r\n        ? contacts.filter(p => p.name.toLowerCase().includes(newSearchTerm.toLowerCase()))\r\n        : contacts\r\n\r\n    const handleSearchTermChange = (event) => {\r\n        setIsSearching(true)\r\n        setNewSearchTerm(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        Contacts.getAll()\r\n            .then(response => {\r\n                setContacts(response)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification notification={notification}/>\r\n            <FilterContact newSearchTerm={newSearchTerm} handleSearchTermChange={handleSearchTermChange}/>\r\n\r\n            <h3>add a new</h3>\r\n\r\n            <ContactForm persons={contacts} setPersons={setContacts} setNotification={setNotification}/>\r\n\r\n            <h2>Numbers</h2>\r\n            <div>\r\n                {contactsToShow.map(person =>\r\n                    <ContactInfo key={person.name} contact={person} allcontacts={contacts} setContacts={setContacts}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}